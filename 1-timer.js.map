{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // onClose(selectedDates) {\n  //   console.log(selectedDates[0]);\n  // },\n};\n\nconst refs = {\n  button : document.querySelector(\"[data-start]\"),\n  days : document.querySelector(\"[data-days]\"),\n  hours : document.querySelector(\"[data-hours]\"),\n  minutes : document.querySelector(\"[data-minutes]\"),\n  seconds : document.querySelector(\"[data-seconds]\"),\n}\nrefs.hours.textContent=\"02\";\nconst time ={\n  start(){\n    \n  },\n  stop(){\n\n  }\n};\n\n// console.log(selectedDates[0]);\n\nrefs.button.addEventListener(\"click\", ()=>{\n  time.start();\n  console.log(fp.selectedDates[0]);\n  // console.log(options.onClose());\n})\n\n// import pathSuccessIcon from \"./img/success-icon.svg\";\n// import pathErrorIcon from \"./img/error-icon.svg\";\n\n// const iconUrl = status ? pathSuccessIcon : pathErrorIcon;\nconst myInput = document.querySelector(\"#datetime-picker\");\nconst fp = flatpickr(myInput, options);\n// options.onClose(fr);\n// console.log(options.userSelectedDate);\n\n\n\niziToast.show({\n  message:\"Please choose a date in the future\",\n  position:\"topRight\",\n  messageColor: 'white',\n  backgroundColor: \"red\",\n});\n\n// console.log(fp.selectedDates[0]);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days, hours, minutes, seconds\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n \nfunction addLeadingZero(value){\n  // padStart()\n}\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n// console.log(fp.currentMonth);"],"names":["options","refs","fp","myInput","flatpickr","iziToast","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IASA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,CAInB,EAEMC,EAAO,CACX,OAAS,SAAS,cAAc,cAAc,EAC9C,KAAO,SAAS,cAAc,aAAa,EAC3C,MAAQ,SAAS,cAAc,cAAc,EAC7C,QAAU,SAAS,cAAc,gBAAgB,EACjD,QAAU,SAAS,cAAc,gBAAgB,CACnD,EACAA,EAAK,MAAM,YAAY,KAYvBA,EAAK,OAAO,iBAAiB,QAAS,IAAI,CAExC,QAAQ,IAAIC,EAAG,cAAc,CAAC,CAAC,CAEjC,CAAC,EAMD,MAAMC,EAAU,SAAS,cAAc,kBAAkB,EACnDD,EAAKE,EAAUD,EAASH,CAAO,EAMrCK,EAAS,KAAK,CACZ,QAAQ,qCACR,SAAS,WACT,aAAc,QACd,gBAAiB,KACnB,CAAC,EAID,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAKA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}